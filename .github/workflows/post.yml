name: Post AI News

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: post-ai-news
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install jq (for pretty JSON)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Check secrets presence
        run: |
          test -n "${{ secrets.TELEGRAM_TOKEN }}" && echo "TELEGRAM_TOKEN=OK" || (echo "TELEGRAM_TOKEN=MISSING" && exit 1)
          test -n "${{ secrets.CHANNEL_USERNAME }}" && echo "CHANNEL_USERNAME=OK" || (echo "CHANNEL_USERNAME=MISSING" && exit 1)
          test -n "${{ secrets.HF_TOKEN }}" && echo "HF_TOKEN=OK" || (echo "HF_TOKEN=MISSING (will skip HF)")

      # ---- Telegram diagnostics (safe & robust) ----
      - name: Telegram diagnostics
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHANNEL_USERNAME: ${{ secrets.CHANNEL_USERNAME }}
        run: |
          set -e

          echo "== getMe =="
          GETME=$(curl -s "https://api.telegram.org/bot${TELEGRAM_TOKEN}/getMe")
          echo "$GETME" | jq .
          BOT_ID=$(echo "$GETME" | jq -r '.result.id')
          echo "BOT_ID=$BOT_ID"
          echo

          echo "== getChat (using CHANNEL_USERNAME) =="
          GETCHAT=$(curl -s "https://api.telegram.org/bot${TELEGRAM_TOKEN}/getChat" -d chat_id="${CHANNEL_USERNAME}")
          echo "$GETCHAT" | jq .
          echo

          echo "== getChatMember (is bot admin/member?) =="
          GETMEM=$(curl -s "https://api.telegram.org/bot${TELEGRAM_TOKEN}/getChatMember" -d chat_id="${CHANNEL_USERNAME}" -d user_id="${BOT_ID}")
          echo "$GETMEM" | jq .
          STATUS=$(echo "$GETMEM" | jq -r '.result.status // empty')
          echo "STATUS=$STATUS"
          echo

          echo "== sendMessage test =="
          SEND=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
                 -d chat_id="${CHANNEL_USERNAME}" \
                 -d text="üß™ ÿ™ÿ≥ÿ™ ÿßÿ±ÿ≥ÿßŸÑ ÿßÿ≤ GitHub Actions" \
                 -d disable_web_page_preview=false)
          echo "$SEND" | jq .
          echo

          # ÿß⁄Øÿ± ÿ®ÿßÿ™ ÿßÿØŸÖ€åŸÜ ŸÜÿ®ŸàÿØÿå ÿÆÿ∑ÿß ÿ®ÿØŸá ÿ™ÿß Ÿàÿßÿ∂ÿ≠ ÿ¥ŸàÿØ
          if [ "$STATUS" != "administrator" ] && [ "$STATUS" != "creator" ]; then
            echo "‚ùå Bot is not admin in the channel. Please add the bot as an Administrator with 'Post Messages' permission."
            exit 1
          fi

      - name: Run bot
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHANNEL_USERNAME: ${{ secrets.CHANNEL_USERNAME }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: python bot.py

      - name: Commit posted.json if changed
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add posted.json
            git commit -m "Update posted.json [skip ci]"
            git push
          fi
